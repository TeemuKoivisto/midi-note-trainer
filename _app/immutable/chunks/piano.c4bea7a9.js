var g=Object.defineProperty;var G=(n,t,i)=>t in n?g(n,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[t]=i;var e=(n,t,i)=>(G(n,typeof t!="symbol"?t+"":t,i),i);const A=""+new URL("../assets/a0.dc3c2e85.mp3",import.meta.url).href,B=""+new URL("../assets/a1.1b1ff663.mp3",import.meta.url).href,w=""+new URL("../assets/a2.b8744b82.mp3",import.meta.url).href,R=""+new URL("../assets/a3.09c40d98.mp3",import.meta.url).href,q=""+new URL("../assets/a4.11c384d7.mp3",import.meta.url).href,L=""+new URL("../assets/a5.bc7d85dc.mp3",import.meta.url).href,U=""+new URL("../assets/a6.a39f1834.mp3",import.meta.url).href,F=""+new URL("../assets/a7.0ce83a41.mp3",import.meta.url).href,y=""+new URL("../assets/damper.391ddc72.mp3",import.meta.url).href,T=""+new URL("../assets/Piano Impulse6.43259355.mp3",import.meta.url).href;async function b(n,t){const i=await fetch(n);if(!i.ok)return{err:i.statusText,code:i.status};const s=await i.arrayBuffer();return{data:await t.decodeAudioData(s)}}class O{constructor(t,i,s,a){e(this,"noteA");e(this,"noteB");e(this,"gainA");e(this,"gainB");e(this,"gain");e(this,"biquadFilter");e(this,"damp");this.noteA=i.createBufferSource(),this.noteB=i.createBufferSource(),this.gainA=i.createGain(),this.gainB=i.createGain(),this.gain=i.createGain(),this.biquadFilter=i.createBiquadFilter(),this.biquadFilter.type="lowpass",this.biquadFilter.connect(s),this.gain.connect(this.biquadFilter),this.gainA.connect(this.gain),this.noteA.connect(this.gainA),this.gainB.connect(this.gain),this.noteB.connect(this.gainB),t<90&&(this.damp=i.createBufferSource(),this.damp.buffer=a,this.damp.connect(s))}on(t,i,s,a,c,h,o,r){this.noteA.buffer=t,this.noteA.playbackRate.value=s,this.biquadFilter.frequency.value=c,this.gainA.gain.value=h,this.gain.gain.value=r,i&&(this.noteB.buffer=i,this.noteB.playbackRate.value=a,this.gainB.gain.value=o,this.noteB.start(0)),this.noteA.start(0)}off(t,i,s){var a;this.gain.gain.setTargetAtTime(0,t,i),this.noteA.stop(s),this.noteB.stop(s),(a=this.damp)==null||a.start(0)}}class P{constructor(t){e(this,"context");e(this,"convolver");e(this,"directGain");e(this,"convGain");e(this,"convGainAfter");e(this,"bufferlists",[]);e(this,"damper");e(this,"sus",!1);e(this,"sustained",[]);e(this,"notes",new Map);return this.context=t,this.convolver=t.createConvolver(),this.directGain=t.createGain(),this.convGain=t.createGain(),this.convGainAfter=t.createGain(),this.convGain.connect(this.convolver),this.convolver.connect(this.convGainAfter),this.convGainAfter.connect(t.destination),this.directGain.connect(t.destination),this.directGain.connect(this.convGain),this.directGain.gain.value=.75,this.convGain.gain.value=0,this.convGainAfter.gain.value=0,this}async load(){const t=[A,B,w,R,q,L,U,F,y,T],i=await Promise.all(t.map(s=>b(s,this.context)));this.bufferlists=[],i.forEach((s,a)=>{"data"in s?(this.bufferlists.push(s.data),a===8?this.damper=s.data:a===9&&(this.convolver.buffer=s.data)):console.error(`Failed to load audio: ${s.err}`)})}playChord(t,i=80){t.notes.forEach(s=>{this.noteOn(s.midi,i)})}noteOn(t,i=80){if(t<109&&t>20){const s=this.notes.get(t);s&&(s.off(this.context.currentTime,1.1,this.context.currentTime+2),this.sustained.splice(this.sustained.indexOf(t),1));const a=Math.floor((t-21)/12),c=a+1,h=a*12+21,o=2**((t-69)/12)*440,r=i/127;let f=o*(2-(t-21)/50)+3*o*r;t<60&&(f=440*(3-(60-21)/50)+3*o*r);const u=1-(t%12/12+1)/12,d=Math.pow(2,(t-h)/12);let p=0,m=0;const v=r**1.4,l=new O(t,this.context,this.directGain,this.damper);l.on(this.bufferlists[a],this.bufferlists[c],d,p,f,u,m,v),this.notes.set(t,l)}}noteOff(t){if(this.sus)this.sustained.push(t);else{const i=this.notes.get(t);t<90&&i&&i.off(this.context.currentTime+.03,.08,this.context.currentTime+2),this.notes.delete(t)}}sustain(t){if(t==127)this.sus=!0,this.convGain.gain.value=1,this.convGainAfter.gain.value=1;else if(t==0){this.sus=!1,this.convGain.gain.value=0,this.convGainAfter.gain.value=0;for(let i=0;i<this.sustained.length;i++)this.notes.has(this.sustained[i])&&this.noteOff(this.sustained[i]);this.sustained.length=0}}}export{P};
